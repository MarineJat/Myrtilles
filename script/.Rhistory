28;2000;Cezanne;1;1;88;79;158;165;226;;747
29;1999;Cezanne;1;1;95;78;150;;;;849
30;1999;Manta;1;1;95;78;150;;;;796
31;1998;Manta;1;1;82;87;351;;;248;784
32;1998;Cezanne;1;1;81;87;381;;;251;822
33;1996;Manta;1;1;91;70;88;206;120;348;710
34;1996;Cezanne;1;1;91;70;88;206;120;241;715
35;2005;Cezanne;1;1;83;81;72;66;108;;839
36;2005;Cezanne;1;1;90;77;72;66;108;;954
37;2005;Cezanne;1;1;90;80;72;66;108;;993
38;1997;Cezanne;1;1;86;74;145;;;269;838
39;1997;Manta;1;1;86;74;228;;;247;804
40;1997;Manta;1;1;92;70;235;;;215;715
41;1998;Cezanne;1;1;92;87;253;;;329;867
42;1998;Cezanne;1;1;92;87;356;;;;946
43;1998;Manta;1;1;82;91;267;;;215;735
44;1998;Manta;1;1;83;89;315;;;276;799
45;1998;Manta;1;1;83;89;266;;;212;750
46;1998;Manta;1;1;83;89;317;;;179;764
47;1999;Manta;2;3;107;82;360;;;289;982
48;1999;Manta;2;3;107;82;402;;;262;1090
49;1999;Manta;2;1;107;82;415;;;232;1111
50;1999;Manta;5;3;124;79;96;152;85;226;999
51;1999;Manta;5;3;124;79;86;92;97;223;983
52;1998;Cezanne;3;3;112;75;77;129;190;;868
53;1999;Cezanne;3;3;118;71;174;158;108;283;771
54;2000;Cezanne;3;3;116;73;93;238;74;334;867
55;2001;Cezanne;3;3;114;78;130;80;100;;915
56;2002;Cezanne;3;3;114;88;77;152;120;316;1084
57;2003;Cezanne;3;3;112;64;72;184;120;389;1053
58;2004;Cezanne;2;1;103;84;99;168;60;;1105
59;2004;Cezanne;3;3;123;70;117;168;60;393;1218
60;2005;Cezanne;2;1;101;79;117;168;60;395;946
61;2005;Cezanne;3;3;116;72;90;168;60;431;1065
62;2002;Theo;3;3;114;88;77;152;120;336;923
63;2002;Theo;5;5;141;72;120;200;145;269;815
64;2003;Theo;3;3;112;64;72;184;120;329;921
65;2004;Theo;3;3;123;70;117;168;60;331;999
66;2005;Theo;3;3;116;72;90;168;60;;921
67;1996;Manta;5;5;128;;27;69;;;1076
68;1996;Manta;5;5;149;;27;69;;;787
69;1996;Manta;3;3;111;;27;69;;;815
70;1998;Manta;3;3;112;75;77;129;190;;791
71;1999;Manta;3;3;118;71;174;158;108;244;718
72;2000;Manta;3;3;116;73;93;238;74;286;753
73;2001;Manta;3;3;114;78;130;80;100;;856
74;2002;Manta;3;3;114;88;77;152;120;338;942
75;2003;Manta;3;3;112;64;72;184;120;323;960
76;2004;Manta;2;1;103;84;117;168;60;419;1156
77;2004;Manta;3;3;123;70;117;168;60;373;1175
78;2005;Manta;2;1;101;79;117;168;60;304;926
79;1998;Escrito;5;5;133;70;77;129;190;235;874
80;1999;Escrito;5;5;137;69;96;158;108;205;901
81;2000;Escrito;5;5;144;68;63;161;70;205;1245
82;2002;Escrito;5;5;141;72;120;200;145;141;887
83;2002;Escrito;6;5;163;67;123;220;145;266;958
84;2003;Escrito;5;5;135;59;72;184;120;;1041
85;2003;Escrito;6;5;167;57;72;184;120;294;998
86;2004;Escrito;5;5;145;65;117;168;60;;996
87;2004;Escrito;6;5;175;69;117;168;60;;1068
88;2005;Escrito;5;5;150;64;96;173;70;211;1167
89;2005;Escrito;6;5;171;69;96;173;70;211;1035
90;2001;Indola;3;3;114;78;130;80;100;;896
91;2002;Indola;5;5;141;72;120;200;145;178;918
92;2002;Indola;6;5;163;67;123;220;145;356;1141
93;2003;Indola;6;5;167;57;72;184;120;271;1021
94;2004;Indola;6;5;175;69;117;168;60;298;1200
95;2005;Indola;6;5;171;69;96;173;70;177;1105
96;2000;Fidji;3;3;116;73;93;238;74;295;783
97;2000;Fidji;5;5;144;68;63;161;70;294;1301
98;2001;Fidji;3;3;114;78;130;80;100;;981
99;2002;Fidji;3;3;114;88;77;152;120;319;1059
100;2004;Fidji;2;1;103;84;117;168;60;348;1173
101;2005;Fidji;2;1;101;79;117;168;60;311;1007
102;2001;Anasta;3;3;114;78;130;80;100;;933
103;2002;Anasta;5;5;141;72;120;200;145;172;878
104;2003;Anasta;3;3;112;64;72;184;120;302;1066
105;2004;Anasta;3;3;123;70;447;168;60;372;1157
106;2005;Anasta;3;3;116;72;90;168;60;308;1034
107;2000;Mehari;3;3;116;73;93;238;74;269;730
108;2000;Mehari;5;5;144;68;63;161;70;262;1370
109;2001;Mehari;3;3;114;78;130;80;100;;872
110;2002;Mehari;3;3;114;88;77;152;120;336;1028
111;2003;Mehari;3;3;112;64;72;184;120;353;1041
112;2004;Mehari;2;1;103;84;117;168;60;;976
113;2004;Mehari;3;3;123;70;117;168;60;;1148
114;2002;Metis;3;3;114;88;77;152;120;372;1054
115;2002;Metis;5;5;141;72;120;200;145;259;823
116;2003;Metis;3;3;112;64;72;184;120;303;1017
117;2004;Metis;3;3;123;70;117;168;60;375;1088
118;2004;Metis;5;5;145;65;117;168;60;409;1018
119;2005;Metis;2;1;101;79;117;168;60;378;752
120;2005;Metis;3;3;116;72;90;168;60;398;851
121;2002;Hugo;5;5;141;72;120;200;145;193;992
122;2002;Hugo;6;5;163;67;123;220;145;311;1108
123;2003;Hugo;5;5;135;59;72;184;120;226;1114
124;2003;Hugo;6;5;167;57;72;184;120;;1052
125;2004;Hugo;5;5;145;65;117;168;60;293;1065
126;2004;Hugo;6;5;175;69;117;168;60;299;1233
127;2005;Hugo;3;3;116;72;90;168;60;276;994
128;2005;Hugo;5;5;150;64;96;173;70;201;1176
129;2005;Hugo;6;5;171;69;96;173;70;;1120
130;2002;Bastille;5;5;141;72;120;200;145;257;752
131;2002;Bastille;6;5;163;67;123;220;145;307;922
132;2003;Bastille;5;5;135;59;72;184;120;276;951
133;2004;Bastille;5;5;145;65;117;168;60;242;896
134;2004;Bastille;6;5;175;69;117;168;60;315;1156
135;2005;Bastille;5;5;150;64;96;173;70;259;1010
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
Melons <- read.csv2(file="DonneesMelons.csv", header=TRUE, sep=';', dec=',', stringsAsFactors = TRUE)
z=0.5
fz=dnorm(z, mean=0, sd=1, log=FALSE)
zz=seq(-3,3)
fz =  # ddp : utiliser la fonction dnorm
fz=dnorm(z, mean=0, sd=1, log=FALSE)
fz
fz
zz=seq(-3, 3, 0.1)
fzz=dnorm(zz, 0, 1, FALSE)
fzz=dnorm(zz)
pz=plot(zz, fzz)
p1=pnorm(0.5, 0, 1)
p2=1-pnorm(z, 0, 1)
# P(-0.5<Z<=0.5)
p3 = pnorm(z)-pnorm(-z)
p3
p3 = pnorm(z)-pnorm(-z)
p3
pnorm(1.2)
pnorm(1.25)
pnorm(1.26)
pnorm(1.28)
pnorm(1.29)
pnorm(1.285)
pnorm(1.284)
prnom(1.2815)
pnorm(1.2815)
pnorm(1.28156)
pnorm(1.2815556)
pnorm(1.2815555556)
z0.9=qnorm(0.9)
n=rnorm(1000, 0, 1)
n
hist(n)
qnorm(0.025)
1-qnorm(0.025)
tabCont=matrix(data=c(18,5,7,21,6,3),nrow = 3,byrow=F)
rownames(tabCont)<-c("Sain","Asymptomatique","Malade")
colnames(tabCont)<-c("Souche A","Souche B")
print(tabCont)
fisher.test(tabCont)
fisher.test(tabCont)
pnorm(0.975, 50, 2)
pnorm(0.975, mean = 50, sd = 2, lower.tail = TRUE)
qnorm(0.975, mean = 50, sd = 2, lower.tail = TRUE)
qnorm(0.975, mean = 50, sd = 2, lower.tail = TRUE)
pnorm(0, mean = 2, sd=1)
pnorm(0, mean = 2, sd=1, lower.tail=FALSE)
source("~/.active-rstudio-document")
pnorm(0, mean = 2, sd=1, lower.tail=FALSE)
alpha = 0.05
Tavant = c(17,16,19,20,21,18,17,15,19,16)
Tapres = c(19,21,16,21,19,17,16,15,17,16)
t.test(Tavant, Tapres)
var.test(Tavant, Tapres)
alpha = 0.05
Tavant = c(17,16,19,20,21,18,17,15,19,16)
Tapres = c(19,21,16,21,19,17,16,15,17,16)
t.test(Tavant, Tapres, paired=TRUE)
t.test(Tavant, Tapres, paired=TRUE, alternative = "greater")
#P1 > P2
t.test (pH1,pH2,var.equal=TRUE)
pH1 = c(3.1,3.9,3.8,3.5,3.6,3.8,3.5,3.5)
pH2 = c(3.4,3.1,3.4,3.3,3.4,3.6,3.4,3.6)
#P1 > P2
t.test (pH1,pH2,var.equal=TRUE)
#P1 > P2
var.test(pH1, pH2)
t.test (pH1,pH2,var.equal=TRUE)
?t.test
t.test (pH1,pH2,paired=FALSE, var.equal = FALSE)
t.test (pH1,pH2,paired=FALSE, alternative = "greater", var.equal = FALSE)
pH1 = c(3.1,3.9,3.8,3.5,3.6,3.8,3.5,3.5)
pH2 = c(3.4,3.1,3.4,3.3,3.4,3.6,3.4,3.6)
#P1 > P2
var.test(pH1, pH2)
t.test (pH1,pH2,paired=FALSE, alternative = "greater", var.equal = FALSE)
t.test (pH1,pH2,paired=FALSE, alternative = "greater", var.equal = TRUE)
x = c(303,302,295,293,300,295,304,295,292,295)
y=300
t.test (x,y, alternative = "less")
x = c(303,302,295,293,300,295,304,295,292,295)
t.test (x,mu=300, alternative = "less")
x=c(20,13,28,56,74,37,81,67)
y=c(65,57,49,34,22,35,38,24)
qqnorm(x)
qqline(x)
qqnorm(y)
qqline(y)
shapiro.test(x)
shapiro.test(y)
modele=lm(y~x)
summary(modele)
1-0.6866
P(0 ≤ T ≤ 1) = pt(1, df=19)-pt(0, df=19)
pt(1, df=19)-pt(0, df=19)
pnorm(-2, -2, 2)
1-pnorm(-2, -2, 2)
1-pnorm(-2, -2, 2)
qnorm (0,9, mean =50, sd =2,  lower.tail = TRUE)
qnorm (0.9, mean =50, sd =2,  lower.tail = TRUE)
qnorm(0.025)
9
x <-1
somme ← 0
while (x ≤ N) {
somme <-somme + x
x <-x + 2
}
print(somme)
N<-9
x <-1
somme <-0
while (x ≤ N) {
somme <-somme + x
x <-x + 2
}
print(somme)
print(somme)
print(somme)
print(somme)
print(somme)
print(somme)
N<-9
N<-9
x <-1
somme <-0
while (x <= N) {
somme <-somme + x
x <-x + 2
}
print(somme)
install.packages("FactoMineR")
install.packages("factoextra")
install.packages("RcmdrMisc")
install.packages("corrplot")
library("FactoMineR")
library("factoextra")
library(RcmdrMisc)
library(corrplot)
pnorm(0.5)
1-pnorm(0.5)
pnorm(-0.5)-pnorm(0.5)
pnorm(0.5)-pnorm(-0.5)
qnorm(0.9)
rnorm(1000000)
rr=rnorm(1000000)
hist(rr)
#5)
quantile(rr)
#5)
quantile(rr)
#1)
pnorm(0.5)
#5)
quantile(rr, probs = 0.9)
# Ex 2 : Loi Normale
x = pnorm(3,26)
# Ex 2 : Loi Normale
x = pnorm(3,26)
# Ex 2 : Loi Normale
x = pnorm(3.26)
# Ex 2 : Loi Normale
x = pnorm(3.26)
# Ex 2 : Loi Normale
x = pnorm(3.26)
# Ex 2 : Loi Normale
x = pnorm(3.26)
# Ex 2 : Loi Normale
x = pnorm(3.26)
# Ex 2 : Loi Normale
pnorm(3.26)
# Ex 2 : Loi Normale
sabi = pnorm(3.26)
#2)
sabi1 = qnorm(3.26)
#2)
sabi1 = qnorm(0.9)
#5)
quantile(rr, probs = 0.9)
#3)
p1 = pt(0.9, df=5)
P2 = pt(0.9, df=25)
#3)
pt1 = pt(0.9, df=5)
Pt2 = pt(0.9, df=25)
#3)
pt3 = qt(0.9, df=5)
Pt4 = qt(0.9, df=25)
#2)
pt1 = pt(1.28, df=5)
Pt2 = pt(1.28, df=25)
# Ex 4 : Test de conformité sur la moyenne
#1)
x = list(1.40, 1.21, 1.35, 1.38, 0.95, 1.35, 1.55, 0.96, 0.70, 0.39)
x_bar = mean(x)
x_bar
n = length(x)
sigma = 2
z_obs = x_bar/(sigma/sqrt(n))
z_obs
# Ex 4 : Test de conformité sur la moyenne
#1)
x = list(1.40, 1.21, 1.35, 1.38, 0.95, 1.35, 1.55, 0.96, 0.70, 0.39)
x_bar = mean(x)
# Ex 4 : Test de conformité sur la moyenne
#1)
x1=list(1.40, 1.21, 1.35, 1.38, 0.95, 1.35, 1.55, 0.96, 0.70, 0.39)
x_bar = mean(x1)
n = length(x1)
sigma = 2
z_obs = x_bar/(sigma/sqrt(n))
setwd("~/Desktop/script and more/script")
library(stringr)
library(dplyr)
library(ggplot2)
library(plyr)
library(visreg)
#
library(nlme)
library(MASS)
library(lme4)
library(MuMIn)
library(corrplot)
rm(list=ls(all=TRUE))
options(na.action = "na.fail")
d<-read.delim("summerBrowsing.csv",sep=";")
head(d)
names(d)
#write.table(d[d$shoot.length..centimeter.>60&!is.na(d$shoot.length..centimeter.),],"possibleoutliers.csv",sep=";")
#renaming column to have shorter names
d$adminNames<-as.factor(word(d$administrativeNames,-1))
d$shortloc<-as.factor(word(d$locality, 2,sep = fixed("|")))
d$NEWloc<-as.factor(ifelse(d$experiment=="Browsed",
str_sub(d$siteNumber,start=1,end=-2),str_sub(d$siteNumber,start=1,end=-3)))
# use of the short code (as siteNumber) for LOCALITY
d$siteNumber<-as.factor(d$siteNumber)
d$Region<-as.factor(mapvalues(d$NaTron_datasetName,from=unique(d$NaTron_datasetName),c("Hedmark","Telemark","Tingvoll","Trondelag")))
d$longi<-as.numeric(gsub(",",".",d$decimalLongitude))
d$lati<-as.numeric(gsub(",",".",d$decimalLatitude))
d$exp<-as.factor(d$experiment)
d$year<-as.factor(d$year)
d$yearc<-as.numeric(as.character(d$year)) ## year as a continuous variable
d$recNum<-d$recordNumber
d$recNum_0<-ifelse(d$recNum==0,1,0) # indicator of "0" on recordnumber
d$recNum_NA<-ifelse(is.na(d$recNum)==T,1,0) # indicator of "NA" on recordnumber
d$nbframe_occCOUNT<-d$number.of.frames.per.occurrence..count.
d$nbframe<-d$number.of.frames.per.plot..count
d$nbframe_NA<-ifelse(is.na(d$nbframe)==T,1,0) # indicator of NA on nbframe per plotcount
d$nbframe_0<-ifelse(d$nbframe==0,1,0) # indicator of "0" on nbframe per plotcount
d$nbflowers<-d$number.of.flowers..count.
d$BUB<-as.factor(d$browsed..boolean.) ## a factor with yes and no
d$BUB[!(d$BUB%in%c("Yes","No"))]<-NA
d$BUB<-droplevels(d$BUB)
d$BUB01<-as.numeric(as.character(mapvalues(d$BUB,c("No","Yes"),c(0,1))))
# a binary variable with 0=UB and 1 =B
d$BUB01_NA<-ifelse(is.na(d$BUB01)==T,1,0) # indicator of NA on BUB01
d$nbleaves<-as.numeric(d$number.of.leaves..count.)
d$shootlg<-d$shoot.length..centimeter.
d$shootlg_NA<-ifelse(is.na(d$shootlg)==T,1,0) # indicator of NA on shootlg
d$shootlg_0<-ifelse(d$shootlg==0,1,0) # indicator of 0 on shootlg
#
## creation of new composite variables
d$SiteStation<-as.factor(paste(d$siteNumber,d$stationNumber,sep="_"))
d$SiteStationYear<-as.factor(paste(d$siteNumber,d$stationNumber,d$year,sep="_"))
d$SiteYear<-as.factor(paste(d$siteNumber,d$year,sep="_"))
## choose the region
#d<-droplevels(d[d$Region=="Tingvoll",])
#d<-droplevels(d[d$Region=="Telemark",])
#d<-droplevels(d[d$Region=="Hedmark",])
d<-droplevels(d[d$Region=="Trondelag",])
# looking at the file to remove the columns with NA
summary(d)
## datafile with all modalities per station per site per year
fic0<-expand.grid(year=unique(d$year),stationNumber=unique(d$stationNumber),NEWloc=unique(d$NEWloc),exp=unique(d$experiment))
fic0$exp<-mapvalues(fic0$exp,from=c("Browsed","Unbrowsed"),c("B","UB"))
fic0$siteNumber<-paste(fic0$NEWloc,fic0$exp,sep="")
fic0$SiteStationYear<-as.factor(paste(fic0$siteNumber,fic0$stationNumber,fic0$year,sep="_"))
dim(fic0)
## for Trondelag, fic0 has 2400 lines= 8 years, 30 sites (15 localities x 2 experimental modalities B /UB) and 10 stations per site
## datafile with all modalities per site per year
fic1<-expand.grid(year=unique(d$year),NEWloc=unique(d$NEWloc),exp=unique(d$experiment))
fic1$exp<-mapvalues(fic1$exp,from=c("Browsed","Unbrowsed"),c("B","UB"))
fic1$siteNumber<-paste(fic1$NEWloc,fic1$exp,sep="")
fic1$SiteYear<-as.factor(paste(fic1$siteNumber,fic1$year,sep="_"))
dim(fic1)
## for Trondelag, fic1 has 240 lines= 8 years, 30 sites (15 localities x 2 experimental modalities B /UB)
# creating a smaller file with columns of interest and short column names
d2<-d[,c("Region","NEWloc","siteNumber","SiteYear","SiteStationYear",
"exp","year","yearc","scientificName","recNum","recNum_0","recNum_NA",
"BUB01","BUB01_NA","nbframe","nbframe_NA","nbframe_0","shootlg","shootlg_0","shootlg_NA")]
str(d2)
# creating a file with only vaccinium
dvac<-droplevels(d2[d2$scientificName=="Vaccinium myrtillus",])
head(dvac,25)
summary(dvac)
### NB : distribution of the nb of record (should be 10...)
table(dvac$recNum) # goes up to 36
plot(table(dvac$recNum))
table(dvac$recNum[dvac$nbframe>124],dvac$nbframe[dvac$nbframe>124])
##  verifying that the nb of unique modalities
length(unique(dvac$SiteStationYear)) ## there are less than 2400
length(unique(dvac$SiteStation))
length(unique(dvac$SiteYear))
length(unique(dvac$siteNumber))
length(unique(dvac$NEWloc))
str(dvac)
summary(dvac)
### aggregating the values of RESPONSE variable at the station level, so with "SiteStationYear"
## 1. for shoot length
temp_mean<-with(dvac,aggregate(shootlg,list(SiteStationYear=dvac$SiteStationYear),mean,na.rm=TRUE))
colnames(temp_mean)<-c("SiteStationYear","meanshootlg")
mergefile1<-merge(fic0,temp_mean,by="SiteStationYear",all.x=T)
head(mergefile1,50)
dim(mergefile1)
dim(mergefile1[is.na(mergefile1$meanshootlg)==T,])
table(is.na(temp_mean$meanshootlgth))
# 2. for nbframe_plotCOUNT
temp_frame<-with(dvac,aggregate(nbframe,list(SiteStationYear=dvac$SiteStationYear),max,na.omit=T))
colnames(temp_frame)<-c("SiteStationYear","nbframe")
mergefile2<-merge(mergefile1,temp_frame,by="SiteStationYear",all.x=T)
head(mergefile2)
dim(mergefile2)
dim(mergefile2[is.na(mergefile2$nbframe)==T,])
# 3. for BUB
temp_BUB<-with(dvac,aggregate(BUB01,list(SiteStationYear=dvac$SiteStationYear),sum,na.rm=TRUE))
colnames(temp_BUB)<-c("SiteStationYear","BUBsum")
mergefile3<-merge(mergefile2,temp_BUB,by="SiteStationYear",all.x=T)
head(mergefile3)
dim(mergefile3)
dim(mergefile3[is.na(mergefile3$BUBsum)==T,])
#4. number of myrtillus individuals measured in each station (= quadrat) a given year
maxpied<-aggregate(dvac$recNum,list(SiteStationYear=dvac$SiteStationYear),max)
colnames(maxpied)<-c("SiteStationYear","maxpied")
mergefile4<-merge(mergefile3,maxpied,by="SiteStationYear",all.x=T)
dim(mergefile4)
head(mergefile4)
mf<-mergefile4
str(mf)
mf$propBUB<-mf$BUBsum/mf$maxpied
head(mf)
hist(mf$propBUB)
hist(log(mf$propBUB/(1-mf$propBUB)))
hist(mf$nbframe)
hist(log(mf$nbframe))
names(mf)
summary(mf)
mf<-droplevels(mf)
## beware: when nbframe=125 and maxpied = 0 or NA, this means that there was no myrtillus
## we create an indicator for these cases
droplevels(dvac[dvac$SiteStationYear=="SLUB_7_2008",])
na.omit(mf[mf$nbframe>125,])
mf[mf$nbframe==125&is.na(mf$nbframe)==F,]
dim(mf[mf$nbframe==125&is.na(mf$nbframe)==F,])
mf125<-plot(mf$nbframe,mf$maxpied)
## Paired boxplot
### Creation of 8 boxplots representing the "shoot length" according to the treatment "B" "UB" according to the year
library(dplyr)
library(ggplot2)
### 2008
# Filter data for 2008
df_2008 <- subset(mergefile4, year == "2008")
# Create the ggplot with color="NEWloc"
ggplot(df_2008, aes(x=exp, y=meanshootlg, colour=NEWloc))+
geom_point()+
theme(legend.position="none")+
geom_boxplot(alpha=0)+
geom_line(aes(group=NEWloc), colour="grey70")+
labs(title = "Mean shoot length in 2008", x = "Treatment", y = "Mean shoot length") +
theme_classic()
# Create the ggplot with color="exp"
ggplot(df_2008, aes(x=exp, y=meanshootlg, colour=exp))+
geom_point()+
theme(legend.position="none")+
geom_boxplot(alpha=0)+
geom_line(aes(group=NEWloc), colour="grey70")+
labs(title = "Mean shoot length in 2008", x = "Treatment", y = "Mean shoot length") +
theme_classic()
### 2010
df_2010 <- subset(mergefile4, year == "2010")
ggplot(df_2010, aes(x=exp, y=meanshootlg, colour=exp))+ # possible also with colour="NEWloc"
geom_point()+
theme(legend.position="none")+
geom_boxplot(alpha=0)+
geom_line(aes(group=NEWloc), colour="grey70")+
labs(title = "Mean shoot length in 2010", x = "Treatment", y = "Mean shoot length") +
theme_classic()
### 2012
df_2012 <- subset(mergefile4, year == "2012")
ggplot(df_2012, aes(x=exp, y=meanshootlg, colour=exp))+ # possible also with colour="NEWloc"
geom_point()+
theme(legend.position="none")+
geom_boxplot(alpha=0)+
geom_line(aes(group=NEWloc), colour="grey70")+
labs(title = "Mean shoot length in 2012", x = "Treatment", y = "Mean shoot length") +
theme_classic()
